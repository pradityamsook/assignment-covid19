{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","props","handleSearch","text","data","state","dataCovid","arr","filter","val","Country","includes","push","setState","searchByCountry","isLoaded","sort","newDataList","this","a","b","TotalConfirmed","axios","get","then","res","Countries","catch","err","console","error","reverse","className","Helmet","length","type","placeholder","onChange","e","target","value","map","covid","TotalDeaths","TotalRecovered","ID","style","textAlign","colSpan","React","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kVAyJeA,E,kDA/Ib,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IAeRC,aAAe,SAACC,GACd,IAAMC,EAAO,EAAKC,MAAMC,UAEpBC,EAAM,GACVH,EAAKI,QAAO,SAACC,GACPA,EAAIC,QAAQC,SAASR,IACvBI,EAAIK,KAAKH,MAIA,KAATN,EACF,EAAKU,SAAS,CACZP,UAAW,EAAKD,MAAMS,kBAGxB,EAAKD,SAAS,CACZP,UAAWC,KA9Bf,EAAKF,MAAQ,CACXC,UAAW,GACXS,UAAU,EACVC,KAAM,OACNF,gBAAiB,IANF,E,wDAqCnB,WACE,IACIG,EADaC,KAAKb,MAEE,SAApBa,KAAKb,MAAMW,KACbC,EAAYX,UAAUU,MAAK,SAACG,EAAGC,GAAJ,OAAUD,EAAEE,eAAiBD,EAAEC,kBAE1DJ,EAAYX,UAAUU,MAAK,SAACG,EAAGC,GAAJ,OAAUD,EAAEE,eAAiBD,EAAEC,kBAG5DH,KAAKL,SAAS,CACZP,UAAWW,EAAYD,MACrB,SAACG,EAAGC,GAAJ,OAAUD,EAAEE,eAAiBD,EAAEC,sB,sEAKrC,iCAAAF,EAAA,sEACQG,IACHC,IAAI,sCACJC,MAAK,SAACC,GACL,EAAKZ,SAAS,CACZE,UAAU,EACVT,UAAWmB,EAAIrB,KAAKsB,UACpBZ,gBAAiBW,EAAIrB,KAAKsB,eAG7BC,OAAM,SAACC,GACNC,QAAQC,MAAMF,MAXpB,2C,0EAeA,WAAU,IAAD,OACP,EAAiDV,KAAKb,MAA9CC,EAAR,EAAQA,UAAWQ,EAAnB,EAAmBA,gBAAiBC,EAApC,EAAoCA,SAIpC,OAHAT,EAAUU,MAAK,SAACG,EAAGC,GAAJ,OAAUD,EAAEE,eAAiBD,EAAEC,kBAC9Cf,EAAUyB,SAAQ,SAACZ,GAAD,OAAOA,EAAEE,kBAEtBN,EAKH,sBAAKiB,UAAU,MAAf,UACE,cAACC,EAAA,EAAD,UACE,qDAEF,qDACA,kDAAqBnB,EAAgBoB,UACrC,uBACEC,KAAK,OACLC,YAAY,yBACZC,SAAU,SAACC,GAAD,OAAO,EAAKpC,aAAaoC,EAAEC,OAAOC,UAG9C,kCACE,gCACE,+BACE,yCACA,iDACA,8CACA,sDAGHlC,EAAU4B,OAAS,EAClB5B,EAAUmC,KAAI,SAACC,GAAD,OACZA,EAAMrB,eAAiB,GACvBqB,EAAMC,YAAc,GACpBD,EAAME,eAAiB,EACrB,+BACE,6BAAKF,EAAMhC,UACX,6BAAKgC,EAAMrB,iBACX,6BAAKqB,EAAMC,cACX,6BAAKD,EAAME,mBAJJF,EAAMG,IAOf,+BACE,6BAAKH,EAAMhC,UACX,6BACGgC,EAAMrB,eAAiB,EACtB,8BAAMqB,EAAMrB,iBACV,OAEN,6BACGqB,EAAMC,YAAc,EACnB,8BAAMD,EAAMC,cACV,OAEN,6BACGD,EAAME,eAAiB,EACtB,8BAAMF,EAAME,iBACV,SAfCF,EAAMG,OAqBnB,6BACE,oBAAIC,MAAO,CAAEC,UAAW,UAAYC,QAAS,EAA7C,wFA3DD,sD,GA3EKC,IAAMC,WCGTC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqB7B,MAAK,YAAkD,IAA/C8B,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.7524ebe9.chunk.js","sourcesContent":["import React from \"react\";\r\nimport axios from \"axios\";\r\nimport { Helmet } from \"react-helmet\";\r\n// import Covid19 from \"./Covid19\";\r\n\r\n// import css\r\nimport \"./App.css\";\r\nimport \"./table.css\";\r\n\r\nclass App extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      dataCovid: [],\r\n      isLoaded: false,\r\n      sort: \"desc\",\r\n      searchByCountry: [],\r\n    };\r\n  }\r\n\r\n  // async getDataCovid19 () {\r\n  //   const res = await axios.get(\"https://api.covid19api.com/summary\");\r\n  //   const data = await res.json();\r\n  //   return data.results;\r\n  // }\r\n\r\n  handleSearch = (text) => {\r\n    const data = this.state.dataCovid;\r\n\r\n    let arr = [];\r\n    data.filter((val) => {\r\n      if (val.Country.includes(text)) {\r\n        arr.push(val);\r\n      }\r\n    });\r\n\r\n    if (text === \"\") {\r\n      this.setState({\r\n        dataCovid: this.state.searchByCountry,\r\n      });\r\n    } else {\r\n      this.setState({\r\n        dataCovid: arr,\r\n      });\r\n    }\r\n  };\r\n\r\n  sortByTotalConfirmed() {\r\n    const dataList = this.state;\r\n    let newDataList = dataList;\r\n    if (this.state.sort === \"desc\") {\r\n      newDataList.dataCovid.sort((a, b) => a.TotalConfirmed > b.TotalConfirmed);\r\n    } else {\r\n      newDataList.dataCovid.sort((a, b) => a.TotalConfirmed < b.TotalConfirmed);\r\n    }\r\n\r\n    this.setState({\r\n      dataCovid: newDataList.sort(\r\n        (a, b) => a.TotalConfirmed > b.TotalConfirmed\r\n      ),\r\n    });\r\n  }\r\n\r\n  async componentDidMount() {\r\n    await axios\r\n      .get(\"https://api.covid19api.com/summary\")\r\n      .then((res) => {\r\n        this.setState({\r\n          isLoaded: true,\r\n          dataCovid: res.data.Countries,\r\n          searchByCountry: res.data.Countries,\r\n        });\r\n      })\r\n      .catch((err) => {\r\n        console.error(err);\r\n      });\r\n  }\r\n\r\n  render() {\r\n    const { dataCovid, searchByCountry, isLoaded } = this.state; //extracter\r\n    dataCovid.sort((a, b) => a.TotalConfirmed - b.TotalConfirmed);\r\n    dataCovid.reverse((a) => a.TotalConfirmed);\r\n\r\n    if (!isLoaded) {\r\n      return <div>waiting data...</div>;\r\n    }\r\n\r\n    return (\r\n      <div className=\"App\">\r\n        <Helmet>\r\n          <title>Report COVID19</title>\r\n        </Helmet>\r\n        <header>Report COVID-19</header>\r\n        <div>Total country: {searchByCountry.length}</div>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Search country name...\"\r\n          onChange={(e) => this.handleSearch(e.target.value)}\r\n        />\r\n        {}\r\n        <table>\r\n          <thead>\r\n            <tr>\r\n              <th>Country</th>\r\n              <th>Total confirmed</th>\r\n              <th>Total deaths</th>\r\n              <th>Total recovered</th>\r\n            </tr>\r\n          </thead>\r\n          {dataCovid.length > 0 ? (\r\n            dataCovid.map((covid) =>\r\n              covid.TotalConfirmed > 0 ||\r\n              covid.TotalDeaths > 0 ||\r\n              covid.TotalRecovered > 0 ? (\r\n                <tr key={covid.ID}>\r\n                  <td>{covid.Country}</td>\r\n                  <td>{covid.TotalConfirmed}</td>\r\n                  <td>{covid.TotalDeaths}</td>\r\n                  <td>{covid.TotalRecovered}</td>\r\n                </tr>\r\n              ) : (\r\n                <tr key={covid.ID}>\r\n                  <td>{covid.Country}</td>\r\n                  <td>\r\n                    {covid.TotalConfirmed > 0 ? (\r\n                      <div>{covid.TotalConfirmed}</div>\r\n                    ) : null}\r\n                  </td>\r\n                  <td>\r\n                    {covid.TotalDeaths > 0 ? (\r\n                      <div>{covid.TotalDeaths}</div>\r\n                    ) : null}\r\n                  </td>\r\n                  <td>\r\n                    {covid.TotalRecovered > 0 ? (\r\n                      <div>{covid.TotalRecovered}</div>\r\n                    ) : null}\r\n                  </td>\r\n                </tr>\r\n              )\r\n            )\r\n          ) : (\r\n            <tr>\r\n              <td style={{ textAlign: \"center\" }} colSpan={4}>\r\n                ไม่พบข้อมูล\r\n              </td>\r\n            </tr>\r\n          )}\r\n        </table>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}